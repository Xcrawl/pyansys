.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_00-read_binary_pontoon.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_examples_00-read_binary_pontoon.py:


.. _ref_pontoon:

Shell Static Analysis
~~~~~~~~~~~~~~~~~~~~~

Visualize a shell static analysis


.. code-block:: default

    # download the pontoon example
    import pyansys
    pontoon = pyansys.download_pontoon()








Print the pontoon result


.. code-block:: default

    print(pontoon)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    PyANSYS MAPDL Result file object
    Title       : CASE  1001  'H =  1.0  T =  62.8  D =  -0.0  P =   0.0'
    Units       : User Defined
    Version     : 19.3
    Cyclic      : False
    Result Sets : 1
    Nodes       : 8765
    Elements    : 8640

    Available Results:
    EMS : Misc. data
    ENF : Nodal forces
    ENS : Nodal stresses
    ENG : Volume and energies
    EEL : Elastic strains
    EUL : Euler angles
    MNL : Material nonlinear record




Plot the nodal displacement


.. code-block:: default

    pontoon.plot_nodal_solution(0, show_displacement=True, max_disp=10,
                                overlay_wireframe=True)





.. image:: /examples/00-read_binary/images/sphx_glr_pontoon_001.png
    :alt: pontoon
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(150.01531583228476, 105.01530987846935, 108.01533810354724),
     (45.000005954531886, 7.164882021015728e-10, 3.0000282257944133),
     (0.0, 0.0, 1.0)]



print the available result types


.. code-block:: default

    pontoon.available_results





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    {'EMS': 'Misc. data', 'ENF': 'Nodal forces', 'ENS': 'Nodal stresses', 'ENG': 'Volume and energies', 'EEL': 'Elastic strains', 'EUL': 'Euler angles', 'MNL': 'Material nonlinear record'}



Plot the shell elements


.. code-block:: default

    pontoon.plot()




.. image:: /examples/00-read_binary/images/sphx_glr_pontoon_002.png
    :alt: pontoon
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(150.0152852510816, 105.0152852510816, 108.01528525108166),
     (45.000000000000014, 8.881784197001252e-16, 3.000000000000005),
     (0.0, 0.0, 1.0)]



Plot the elastic strain and show exaggerated displacement


.. code-block:: default

    pontoon.plot_nodal_elastic_strain(0, 'eqv', show_displacement=True,
                                      displacement_factor=100000,
                                      overlay_wireframe=True,
                                      lighting=False,
                                      add_text=False,
                                      show_edges=True)
    # Note: lighting is disabled here as it's too dark





.. image:: /examples/00-read_binary/images/sphx_glr_pontoon_003.png
    :alt: pontoon
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(153.24979653815484, 107.65441499812309, 113.47692279060745),
     (45.59545318886131, 7.164882954224794e-05, 5.822579441313902),
     (0.0, 0.0, 1.0)]



Missing solution data will plot as a white mesh


.. code-block:: default

    pontoon.plot_nodal_thermal_strain(0, 'eqv', show_displacement=True)




.. image:: /examples/00-read_binary/images/sphx_glr_pontoon_004.png
    :alt: pontoon
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(150.01531580400382, 105.01530985018842, 108.01533827421203),
     (45.000005954531886, 7.164882021015728e-10, 3.000028424740094),
     (0.0, 0.0, 1.0)]




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  4.430 seconds)


.. _sphx_glr_download_examples_00-read_binary_pontoon.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: pontoon.py <pontoon.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: pontoon.ipynb <pontoon.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
